|MyLock
clk => clk.IN3
KEY[0] => KEY[0].IN1
KEY[1] => KEY[1].IN1
KEY[2] => KEY[2].IN1
KEY[3] => KEY[3].IN1
out << MyFSM:FSM.out


|MyLock|Synchroniser:s
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
clk => buff[0].CLK
clk => buff[1].CLK
clk => buff[2].CLK
clk => buff[3].CLK
in[0] => buff[0].DATAIN
in[1] => buff[1].DATAIN
in[2] => buff[2].DATAIN
in[3] => buff[3].DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MyLock|EdgeDetectors:e
clk => clk.IN3
in[0] => in[0].IN1
in[1] => in[1].IN1
in[2] => in[2].IN1
out[0] <= EdgeDetector:EdgeD[0].ED.out
out[1] <= EdgeDetector:EdgeD[1].ED.out
out[2] <= EdgeDetector:EdgeD[2].ED.out


|MyLock|EdgeDetectors:e|EdgeDetector:EdgeD[0].ED
clk => prev.CLK
in => prev.DATAIN
in => out.IN1
out <= out.DB_MAX_OUTPUT_PORT_TYPE


|MyLock|EdgeDetectors:e|EdgeDetector:EdgeD[1].ED
clk => prev.CLK
in => prev.DATAIN
in => out.IN1
out <= out.DB_MAX_OUTPUT_PORT_TYPE


|MyLock|EdgeDetectors:e|EdgeDetector:EdgeD[2].ED
clk => prev.CLK
in => prev.DATAIN
in => out.IN1
out <= out.DB_MAX_OUTPUT_PORT_TYPE


|MyLock|MyFSM:FSM
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
IN[0] => Add0.IN2
IN[0] => WideOr0.IN0
IN[0] => next_state.OUTPUTSELECT
IN[1] => Add0.IN1
IN[1] => comb.IN1
IN[1] => WideOr0.IN1
IN[2] => Add1.IN4
IN[2] => comb.IN1
IN[2] => WideOr0.IN2
out <= out.DB_MAX_OUTPUT_PORT_TYPE


